#!/bin/sh
# image-customize script to install cockpit/ws container and the locally built RPM
set -eux

# don't force https:// (self-signed cert)
mkdir -p /etc/cockpit
printf "[WebService]\\nAllowUnencrypted=true\\n" > /etc/cockpit/cockpit.conf

# Install cockpit and run it once to generate certificate; avoids slow startups during tests
# different commands on Atomic and Fedora CoreOS
if type atomic >/dev/null 2>&1; then
    atomic install cockpit/ws
    atomic --ignore run cockpit/ws
else
    podman container runlabel INSTALL cockpit/ws
fi

# cockpit's {rhel,continuous}-atomic images already have this checkout, fedora-coreos does not
if [ ! -d /var/local-tree ]; then
    checkout=$(rpm-ostree status --booted --jsonpath '$.deployments[0].checksum' | tr -d '[]\n "')
    ostree checkout "$checkout" /var/local-tree
fi

# originally docker.io/nginx, but that quickly runs into rate limits; use quay.io mirror
podman pull quay.io/app-sre/nginx

# create a local repository for tests
mkdir -p /var/local-repo
ostree init --repo /var/local-repo --mode archive-z2
branch=$(rpm-ostree status | sed -n '/ostree:/ { s/^.*://; p; q }')
ostree commit -s "cockpit-tree" --repo /var/local-repo --add-metadata-string version=cockpit-base.1  --tree=dir=/var/local-tree  -b $branch
ostree remote add local file:///var/local-repo --no-gpg-verify
# on fedora-coreos we use `rpm-ostree install`, which collides on rebase
if [ "${branch%fedora*}" != "$branch" ]; then
    rpm-ostree rebase --uninstall=cockpit-ostree local:$branch
else
    rpm-ostree rebase local:$branch
fi

# Enable ssh password authentication
sed -i '/PasswordAuthentication no/d' /etc/ssh/sshd_config

rpm-ostree status

if firewall-cmd --state >/dev/null 2>&1; then
    firewall-cmd --add-service=cockpit --permanent
fi
